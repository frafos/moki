# TODO: ldap auth
events {}

http {

    # `api` and `front` resolv to the container ip because of docker network

    upstream front {
        server front:3000;
    }

    upstream api {
        server api:4242;
    }

    # force https
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # location ^~ /.well-known {
        #   allow all;
        #   root  /data/letsencrypt/;
        # }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;

        # replace this with your real certs!
        # TODO: setup our nginx thing to work with a letsencrypt docker image
        ssl_certificate /etc/nginx/conf.d/cert.pem;
        ssl_certificate_key /etc/nginx/conf.d/key.pem;

        # user1/pass1
        auth_basic "Restricted area";
        auth_basic_user_file /etc/nginx/htpasswd;

        server_name abc-monitor;
        access_log /var/log/nginx/abc-monitor.access.log;

        # if needed, may be uncommented and the the dhparam file created using
        # 'openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096' ssl_dhparam /etc/ssl/certs/dhparam.pem

        ########################################################################
        # from https://cipherli.st/                                            #
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
        ########################################################################

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Content-Type-Options nosniff;

        ##################################
        # END https://cipherli.st/ BLOCK #
        ##################################

        location / {
            proxy_pass         http://front;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

            # nginx secu
            proxy_read_timeout 360;
            proxy_set_header Authorization $remote_user;
            proxy_pass_header  Authorization;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            keepalive_timeout 100000;
        }

        location /api {
            proxy_pass         http://api;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

            # nginx secu
            proxy_read_timeout 360;
            proxy_set_header Authorization $remote_user;
            proxy_pass_header  Authorization;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            keepalive_timeout 100000;
        }
    }
}
